---
- hosts: all

  tasks:
    - name: Generate hosts file with IP-hostname mapping
      lineinfile:
        dest: /etc/hosts
        regexp: '.*{{ item }}$'
        line: "{{ hostvars[item].ansible_default_ipv4.address }} {{ item }}"
        state: present
      when: hostvars[item].ansible_default_ipv4.address is defined
      with_items: "{{ groups['all'] }}"
      become: true

    - name: Update & upgrade apt packages on all hosts
      apt:
        update_cache: yes
        upgrade: dist
      become: true

- hosts: devserver

  vars_files:
    - setup_var.yml

  tasks:
    - name: Download or update git repository on dev server
      git:
        repo: 'https://github.com/sumu9814/DEII_G5.git'
        dest: /DEII_G5
        version: main         # or your default branch
        update: yes           # pull changes if repo already exists
        force: yes            # reset local changes if any

    - name: Ensure ownership of synced repo on devserver
      file:
        path: /DEII_G5
        state: directory
        recurse: yes
        owner: appuser
        group: appuser
      become: true

    - name: Install python3-pip on devserver
      apt:
        pkg: python3-pip
        state: latest
        update_cache: yes
      become: true

    - name: Install ML packages on devserver
      pip:
        name:
          - tensorflow==2.10.0
          - keras==2.10.0
          - "numpy<2.0"
          - future
          - scikit-learn==1.0.2
      become: true

    - name: Sync only Flask app & best model files from dev to prodserver
      synchronize:
        src: /DEII_G5/ci_cd/development_server/
        dest: /home/appuser/star-prediction/
        recursive: yes
        delete: yes
        rsync_opts:
          - "--exclude=.git"
      delegate_to: devserver
      become: true

    - name: Add Docker repository key on devserver
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      become: true
      delegate_to: devserver

    - name: Add Docker repository on devserver
      command: add-apt-repository -y "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
      become: true
      delegate_to: devserver

    - name: Update apt cache after adding Docker repo on devserver
      apt:
        update_cache: yes
        upgrade: dist
      become: true
      delegate_to: devserver

    - name: Create Docker config directory on devserver
      file:
        path: /etc/docker
        state: directory
      become: true
      delegate_to: devserver

    - name: Create Docker daemon.json to set MTU on devserver
      copy:
        dest: /etc/docker/daemon.json
        content: |
          {
            "mtu": 1450
          }
      become: true
      delegate_to: devserver

    - name: Install Docker CE on devserver
      apt:
        pkg: docker-ce
        state: present
        update_cache: true
        allow_unauthenticated: yes
      become: true
      delegate_to: devserver

    - name: Sync dev app files including docker-compose.yml from client server to devserver
      synchronize:
        src: /DEII_G5/ci_cd/development_server/
        dest: /home/appuser/star-prediction/
        recursive: yes
        delete: yes
      become: true
      delegate_to: devserver

    - name: Ensure correct permissions for star-prediction directory on devserver
      file:
        path: /home/appuser/star-prediction
        state: directory
        recurse: yes
        owner: appuser
        group: appuser
      become: true
      delegate_to: devserver

    - name: Run Docker Compose containers on devserver
      shell: docker compose up -d
      args:
        chdir: /home/appuser/star-prediction
      become: true
      delegate_to: devserver


- hosts: prodserver

  vars_files:
    - setup_var.yml

  tasks:
    - name: Install extra packages needed for Docker setup
      apt:
        pkg: "{{ item }}"
        state: latest
        update_cache: yes
      with_items:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
      become: true

    - name: Update & upgrade packages on prodserver
      apt:
        update_cache: yes
        upgrade: dist
      become: true

    - name: Add Docker repository key on prodserver
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      become: true

    - name: Add Docker repository on prodserver
      command: add-apt-repository -y "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
      become: true

    - name: Update apt cache after adding Docker repo
      apt:
        update_cache: yes
        upgrade: dist
      become: true

    - name: Create Docker config directory on prodserver
      file:
        path: /etc/docker
        state: directory
      become: true

    - name: Create Docker daemon.json to set MTU on prodserver
      copy:
        dest: /etc/docker/daemon.json
        content: |
          {
            "mtu": 1450
          }
      become: true

    - name: Install Docker CE on prodserver
      apt:
        pkg: docker-ce
        state: present
        update_cache: true
        allow_unauthenticated: yes
      become: true

    - name: Sync production app files including docker-compose.yml from client server to prodserver
      synchronize:
        src: /DEII_G5/ci_cd/production_server/
        dest: /home/appuser/star-prediction/
        recursive: yes
        delete: yes
      delegate_to: prodserver
      become: true

    - name: Ensure correct permissions for star-prediction directory on prodserver
      file:
        path: /home/appuser/star-prediction
        state: directory
        recurse: yes
        owner: appuser
        group: appuser
      become: true

    - name: Run Docker Compose containers on prodserver
      shell: docker compose up -d
      args:
        chdir: /home/appuser/star-prediction
      become: true
